const swaggerAutogen = require('swagger-autogen')({openapi: '3.0.0'});
require('dotenv').config();

const outputFile = process.env.SWAGGER_OUTPUT_JSON_PATH;
const endpointsFiles = ['./src/app.js'];

const doc = {
    info: {
        version: process.env.npm_package_version,
        title: 'My API',
        description: 'Documentation automatically generated by the <b>swagger-autogen</b> module.'
    },
    servers: [
        {
            url: 'http://localhost:3000',
            description: 'banking-api-gateway'
        },
        {
            url: 'http://localhost:3001',
            description: 'client-api'
        },
        {
            url: 'http://localhost:3002',
            description: 'account-api'
        },
        {
            url: 'http://localhost:3003',
            description: 'transaction-api'
        }
    ],
    consumes: ['application/json'],
    produces: ['application/json'],
    tags: [
        {
            'name': 'account-api',
            'description': 'Endpoints'
        }
    ],
    components: {
        schemas: {
            'New Account': {
                $holder: '45747215612'
            },
            Account: {
                id: '63cc9f72a23faefce2e1e80d',
                holder: '63cc98a061eb8862867ac260',
                agency: '0564',
                number: '0000013-2',
                enabled: true,
                blocked: false,
                balance: {
                    currency: 'BRL',
                    value: 0
                },
                limits: {
                    withdraw: {
                        daily: 2000
                    }
                },
                createdAt: '2023-01-22T02:46:02.298Z',
                updatedAt: '2023-01-22T02:46:02.298Z'
            },
            Error: {
                errors: {
                    field: 'Error message'
                }
            }
        },
        responses: {
            AccountCreated: {
                description: 'Resource created',
                content: {
                    'application/json': {
                        schema: {
                            $ref: '#/components/schemas/Account',
                        }
                    }
                }
            },
            GetAccount: {
                description: 'OK',
                content: {
                    'application/json': {
                        schema: {
                            $ref: '#/components/schemas/Account',
                        }
                    }
                }
            },
            HolderNotFound: {
                description: 'Holder not found',
                content: {
                    'application/json': {
                        schema: {
                            $ref: '#/components/schemas/Error',
                        },
                        example: {
                            errors: {
                                holder: 'Holder not found'
                            }
                        }
                    }
                }
            },
            HolderIsRequired: {
                description: 'Holder is required',
                content: {
                    'application/json': {
                        schema: {
                            $ref: '#/components/schemas/Error',
                        },
                        example: {
                            errors: {
                                holder: 'holder is required'
                            }
                        }
                    }
                }
            },
            NotFound: {
                description: 'Not Found'
            },
            InvalidId: {
                description: 'Invalid id',
                content: {
                    'application/json': {
                        schema: {
                            $ref: '#/components/schemas/Error',
                        },
                        example: {
                            errors: {
                                id: 'invalid id'                                
                            }
                        }
                    }
                }
            },
            AccountAlreadyBlocked: {
                description: 'Account already blocked',
                content: {
                    'application/json': {
                        schema: {
                            $ref: '#/components/schemas/Error',
                        },
                        example: {
                            errors: {
                                details: 'Account already blocked'
                            }
                        }
                    }
                }
            },
            AccountAlreadyUnblocked: {
                description: 'Account already unblocked',
                content: {
                    'application/json': {
                        schema: {
                            $ref: '#/components/schemas/Error',
                        },
                        example: {
                            errors: {
                                details: 'Account already unblocked'
                            }
                        }
                    }
                }
            },
            AccountAlreadyDisabled: {
                description: 'Account already disabled',
                content: {
                    'application/json': {
                        schema: {
                            $ref: '#/components/schemas/Error',
                        },
                        example: {
                            errors: {
                                details: 'Account already disabled'
                            }
                        }
                    }
                }
            },
        }
    }
}

swaggerAutogen(outputFile, endpointsFiles, doc);