{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0.0",
    "title": "My API",
    "description": "Documentation automatically generated by the <b>swagger-autogen</b> module."
  },
  "servers": [
    {
      "url": "http://localhost:3000",
      "description": "banking-api-gateway"
    },
    {
      "url": "http://localhost:3001",
      "description": "client-api"
    },
    {
      "url": "http://localhost:3002",
      "description": "account-api"
    },
    {
      "url": "http://localhost:3003",
      "description": "transaction-api"
    }
  ],
  "tags": [
    {
      "name": "account-api",
      "description": "Endpoints"
    },
    {
      "name": "client-api",
      "description": "Endpoints"
    },
    {
      "name": "transaction-api",
      "description": "Endpoints"
    }
  ],
  "paths": {
    "/": {
      "get": {
        "tags": [
          "Index"
        ],
        "summary": "Index endpoint",
        "description": "Some description...",
        "operationId": "index",
        "parameters": [],
        "responses": {
          "200": {
            "description": "A valid response as health check, including some api informations",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "apiVersion": {
                      "type": "string",
                      "example": "1.0.0"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/account/": {
      "post": {
        "tags": [
          "account-api"
        ],
        "summary": "Create an account",
        "description": "Endpoint for account creation.",
        "operationId": "createAccount",
        "parameters": [],
        "responses": {
          "201": {
            "description": "Created",
            "$ref": "#/components/responses/AccountCreated"
          },
          "400": {
            "$ref": "#/components/responses/HolderIsRequired",
            "description": "Bad Request"
          },
          "404": {
            "$ref": "#/components/responses/HolderNotFound",
            "description": "Not Found"
          }
        },
        "requestBody": {
          "required": true,
          "description": "A valid document number of physical person (Brazil CPF)",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/New Account"
              }
            }
          }
        }
      }
    },
    "/account/{id}": {
      "get": {
        "tags": [
          "account-api"
        ],
        "summary": "Get an account",
        "description": "Some description...",
        "operationId": "getAccount",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The id of the account"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/GetAccount",
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/InvalidId",
            "description": "Bad Request"
          },
          "404": {
            "$ref": "#/components/responses/NotFound",
            "description": "Not Found"
          }
        }
      }
    },
    "/account/{agency}/{number}": {
      "get": {
        "tags": [
          "account-api"
        ],
        "summary": "Get an account by agency and number",
        "description": "Some description...",
        "operationId": "getAccountByNumberAndAgency",
        "parameters": [
          {
            "name": "agency",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The agency of the account"
          },
          {
            "name": "number",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The number of the account"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/GetAccount",
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/InvalidId",
            "description": "Bad Request"
          },
          "404": {
            "$ref": "#/components/responses/NotFound",
            "description": "Not Found"
          }
        }
      }
    },
    "/account/{id}/block": {
      "post": {
        "tags": [
          "account-api"
        ],
        "summary": "Block an account",
        "description": "Some description...",
        "operationId": "blockAccount",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The id of the account"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/GetAccount",
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/AccountAlreadyBlocked",
            "description": "Bad Request"
          },
          "404": {
            "$ref": "#/components/responses/NotFound",
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "account-api"
        ],
        "summary": "Unblock an account",
        "description": "Some description...",
        "operationId": "unblockAccount",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The id of the account"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/GetAccount",
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/AccountAlreadyUnblocked",
            "description": "Bad Request"
          },
          "404": {
            "$ref": "#/components/responses/NotFound",
            "description": "Not Found"
          }
        }
      }
    },
    "/account/{id}/disable": {
      "post": {
        "tags": [
          "account-api"
        ],
        "summary": "Unblock an account",
        "description": "Some description...",
        "operationId": "unblockAccount",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The id of the account"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/GetAccount",
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/AccountAlreadyDisabled",
            "description": "Bad Request"
          },
          "404": {
            "$ref": "#/components/responses/NotFound",
            "description": "Not Found"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "New Account": {
        "type": "object",
        "properties": {
          "holder": {
            "type": "string",
            "example": "45747215612"
          }
        },
        "required": [
          "holder"
        ]
      },
      "Account": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "63cc9f72a23faefce2e1e80d"
          },
          "holder": {
            "type": "string",
            "example": "63cc98a061eb8862867ac260"
          },
          "agency": {
            "type": "string",
            "example": "0564"
          },
          "number": {
            "type": "string",
            "example": "0000013-2"
          },
          "enabled": {
            "type": "boolean",
            "example": true
          },
          "blocked": {
            "type": "boolean",
            "example": false
          },
          "balance": {
            "type": "object",
            "properties": {
              "currency": {
                "type": "string",
                "example": "BRL"
              },
              "value": {
                "type": "number",
                "example": 0
              }
            }
          },
          "limits": {
            "type": "object",
            "properties": {
              "withdraw": {
                "type": "object",
                "properties": {
                  "daily": {
                    "type": "number",
                    "example": 2000
                  }
                }
              }
            }
          },
          "createdAt": {
            "type": "string",
            "example": "2023-01-22T02:46:02.298Z"
          },
          "updatedAt": {
            "type": "string",
            "example": "2023-01-22T02:46:02.298Z"
          }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "object",
            "properties": {
              "field": {
                "type": "string",
                "example": "Error message"
              }
            }
          }
        }
      }
    },
    "responses": {
      "AccountCreated": {
        "description": "Resource created",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Account"
            }
          }
        }
      },
      "GetAccount": {
        "description": "OK",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Account"
            }
          }
        }
      },
      "HolderNotFound": {
        "description": "Holder not found",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            },
            "example": {
              "errors": {
                "holder": "Holder not found"
              }
            }
          }
        }
      },
      "HolderIsRequired": {
        "description": "Holder is required",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            },
            "example": {
              "errors": {
                "holder": "holder is required"
              }
            }
          }
        }
      },
      "NotFound": {
        "description": "Not Found"
      },
      "InvalidId": {
        "description": "Invalid id",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            },
            "example": {
              "errors": {
                "id": "invalid id"
              }
            }
          }
        }
      },
      "AccountAlreadyBlocked": {
        "description": "Account already blocked",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            },
            "example": {
              "errors": {
                "details": "Account already blocked"
              }
            }
          }
        }
      },
      "AccountAlreadyUnblocked": {
        "description": "Account already unblocked",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            },
            "example": {
              "errors": {
                "details": "Account already unblocked"
              }
            }
          }
        }
      },
      "AccountAlreadyDisabled": {
        "description": "Account already disabled",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            },
            "example": {
              "errors": {
                "details": "Account already disabled"
              }
            }
          }
        }
      }
    }
  }
}